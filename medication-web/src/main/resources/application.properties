spring.application.name=medication-web
server.port=8080

# Configure API base URL (can be overridden by env API_BASE_URL)
api.base-url=${API_BASE_URL:http://kong:8000}

# Enable debug logging for OAuth2
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.org.springframework.web.client=DEBUG
logging.level.org.springframework.security.web=DEBUG

# OAuth2 / OIDC Configuration for Keycloak
spring.security.oauth2.client.registration.keycloak.client-id=medication-web
spring.security.oauth2.client.registration.keycloak.client-secret=web-app-secret
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.keycloak.client-authentication-method=client_secret_post

# Keycloak Provider Configuration
# Browser-facing authorization endpoint uses localhost:8082 (accessible from user's browser)
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8082/auth/realms/nll-light/protocol/openid-connect/auth

# Container-to-container endpoints use internal Docker DNS (keycloak:8080)
spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8080/auth/realms/nll-light/protocol/openid-connect/token
# userinfo endpoint removed - we extract user info from ID token instead to avoid issuer mismatch
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://keycloak:8080/auth/realms/nll-light/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
